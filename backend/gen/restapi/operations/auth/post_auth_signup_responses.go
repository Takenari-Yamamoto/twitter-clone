// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Takenari-Yamamoto/twitter-clone/gen/models"
)

// PostAuthSignupCreatedCode is the HTTP code returned for type PostAuthSignupCreated
const PostAuthSignupCreatedCode int = 201

/*
PostAuthSignupCreated 登録成功

swagger:response postAuthSignupCreated
*/
type PostAuthSignupCreated struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewPostAuthSignupCreated creates PostAuthSignupCreated with default headers values
func NewPostAuthSignupCreated() *PostAuthSignupCreated {

	return &PostAuthSignupCreated{}
}

// WithPayload adds the payload to the post auth signup created response
func (o *PostAuthSignupCreated) WithPayload(payload *models.User) *PostAuthSignupCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth signup created response
func (o *PostAuthSignupCreated) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthSignupCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthSignupBadRequestCode is the HTTP code returned for type PostAuthSignupBadRequest
const PostAuthSignupBadRequestCode int = 400

/*
PostAuthSignupBadRequest 不正なリクエスト

swagger:response postAuthSignupBadRequest
*/
type PostAuthSignupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAuthSignupBadRequest creates PostAuthSignupBadRequest with default headers values
func NewPostAuthSignupBadRequest() *PostAuthSignupBadRequest {

	return &PostAuthSignupBadRequest{}
}

// WithPayload adds the payload to the post auth signup bad request response
func (o *PostAuthSignupBadRequest) WithPayload(payload *models.Error) *PostAuthSignupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth signup bad request response
func (o *PostAuthSignupBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthSignupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
