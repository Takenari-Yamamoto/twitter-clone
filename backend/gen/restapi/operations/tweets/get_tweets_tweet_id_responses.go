// Code generated by go-swagger; DO NOT EDIT.

package tweets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Takenari-Yamamoto/twitter-clone/gen/models"
)

// GetTweetsTweetIDOKCode is the HTTP code returned for type GetTweetsTweetIDOK
const GetTweetsTweetIDOKCode int = 200

/*
GetTweetsTweetIDOK 成功

swagger:response getTweetsTweetIdOK
*/
type GetTweetsTweetIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tweet `json:"body,omitempty"`
}

// NewGetTweetsTweetIDOK creates GetTweetsTweetIDOK with default headers values
func NewGetTweetsTweetIDOK() *GetTweetsTweetIDOK {

	return &GetTweetsTweetIDOK{}
}

// WithPayload adds the payload to the get tweets tweet Id o k response
func (o *GetTweetsTweetIDOK) WithPayload(payload *models.Tweet) *GetTweetsTweetIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tweets tweet Id o k response
func (o *GetTweetsTweetIDOK) SetPayload(payload *models.Tweet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTweetsTweetIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTweetsTweetIDNotFoundCode is the HTTP code returned for type GetTweetsTweetIDNotFound
const GetTweetsTweetIDNotFoundCode int = 404

/*
GetTweetsTweetIDNotFound ツイートが見つかりません

swagger:response getTweetsTweetIdNotFound
*/
type GetTweetsTweetIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTweetsTweetIDNotFound creates GetTweetsTweetIDNotFound with default headers values
func NewGetTweetsTweetIDNotFound() *GetTweetsTweetIDNotFound {

	return &GetTweetsTweetIDNotFound{}
}

// WithPayload adds the payload to the get tweets tweet Id not found response
func (o *GetTweetsTweetIDNotFound) WithPayload(payload *models.Error) *GetTweetsTweetIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tweets tweet Id not found response
func (o *GetTweetsTweetIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTweetsTweetIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
