// Code generated by go-swagger; DO NOT EDIT.

package tweets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Takenari-Yamamoto/twitter-clone/gen/models"
)

// PostTweetsTweetIDLikeOKCode is the HTTP code returned for type PostTweetsTweetIDLikeOK
const PostTweetsTweetIDLikeOKCode int = 200

/*
PostTweetsTweetIDLikeOK いいね成功

swagger:response postTweetsTweetIdLikeOK
*/
type PostTweetsTweetIDLikeOK struct {
}

// NewPostTweetsTweetIDLikeOK creates PostTweetsTweetIDLikeOK with default headers values
func NewPostTweetsTweetIDLikeOK() *PostTweetsTweetIDLikeOK {

	return &PostTweetsTweetIDLikeOK{}
}

// WriteResponse to the client
func (o *PostTweetsTweetIDLikeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostTweetsTweetIDLikeUnauthorizedCode is the HTTP code returned for type PostTweetsTweetIDLikeUnauthorized
const PostTweetsTweetIDLikeUnauthorizedCode int = 401

/*
PostTweetsTweetIDLikeUnauthorized 認証エラー

swagger:response postTweetsTweetIdLikeUnauthorized
*/
type PostTweetsTweetIDLikeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTweetsTweetIDLikeUnauthorized creates PostTweetsTweetIDLikeUnauthorized with default headers values
func NewPostTweetsTweetIDLikeUnauthorized() *PostTweetsTweetIDLikeUnauthorized {

	return &PostTweetsTweetIDLikeUnauthorized{}
}

// WithPayload adds the payload to the post tweets tweet Id like unauthorized response
func (o *PostTweetsTweetIDLikeUnauthorized) WithPayload(payload *models.Error) *PostTweetsTweetIDLikeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweets tweet Id like unauthorized response
func (o *PostTweetsTweetIDLikeUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetsTweetIDLikeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
