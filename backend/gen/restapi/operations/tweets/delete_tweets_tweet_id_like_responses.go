// Code generated by go-swagger; DO NOT EDIT.

package tweets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Takenari-Yamamoto/twitter-clone/gen/models"
)

// DeleteTweetsTweetIDLikeNoContentCode is the HTTP code returned for type DeleteTweetsTweetIDLikeNoContent
const DeleteTweetsTweetIDLikeNoContentCode int = 204

/*
DeleteTweetsTweetIDLikeNoContent いいね取り消し成功

swagger:response deleteTweetsTweetIdLikeNoContent
*/
type DeleteTweetsTweetIDLikeNoContent struct {
}

// NewDeleteTweetsTweetIDLikeNoContent creates DeleteTweetsTweetIDLikeNoContent with default headers values
func NewDeleteTweetsTweetIDLikeNoContent() *DeleteTweetsTweetIDLikeNoContent {

	return &DeleteTweetsTweetIDLikeNoContent{}
}

// WriteResponse to the client
func (o *DeleteTweetsTweetIDLikeNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteTweetsTweetIDLikeUnauthorizedCode is the HTTP code returned for type DeleteTweetsTweetIDLikeUnauthorized
const DeleteTweetsTweetIDLikeUnauthorizedCode int = 401

/*
DeleteTweetsTweetIDLikeUnauthorized 認証エラー

swagger:response deleteTweetsTweetIdLikeUnauthorized
*/
type DeleteTweetsTweetIDLikeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteTweetsTweetIDLikeUnauthorized creates DeleteTweetsTweetIDLikeUnauthorized with default headers values
func NewDeleteTweetsTweetIDLikeUnauthorized() *DeleteTweetsTweetIDLikeUnauthorized {

	return &DeleteTweetsTweetIDLikeUnauthorized{}
}

// WithPayload adds the payload to the delete tweets tweet Id like unauthorized response
func (o *DeleteTweetsTweetIDLikeUnauthorized) WithPayload(payload *models.Error) *DeleteTweetsTweetIDLikeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete tweets tweet Id like unauthorized response
func (o *DeleteTweetsTweetIDLikeUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTweetsTweetIDLikeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
