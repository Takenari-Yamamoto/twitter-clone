// Code generated by go-swagger; DO NOT EDIT.

package tweets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Takenari-Yamamoto/twitter-clone/gen/models"
)

// GetUsersUserIDTweetsOKCode is the HTTP code returned for type GetUsersUserIDTweetsOK
const GetUsersUserIDTweetsOKCode int = 200

/*
GetUsersUserIDTweetsOK 成功

swagger:response getUsersUserIdTweetsOK
*/
type GetUsersUserIDTweetsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Tweet `json:"body,omitempty"`
}

// NewGetUsersUserIDTweetsOK creates GetUsersUserIDTweetsOK with default headers values
func NewGetUsersUserIDTweetsOK() *GetUsersUserIDTweetsOK {

	return &GetUsersUserIDTweetsOK{}
}

// WithPayload adds the payload to the get users user Id tweets o k response
func (o *GetUsersUserIDTweetsOK) WithPayload(payload []*models.Tweet) *GetUsersUserIDTweetsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user Id tweets o k response
func (o *GetUsersUserIDTweetsOK) SetPayload(payload []*models.Tweet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDTweetsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Tweet, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUsersUserIDTweetsNotFoundCode is the HTTP code returned for type GetUsersUserIDTweetsNotFound
const GetUsersUserIDTweetsNotFoundCode int = 404

/*
GetUsersUserIDTweetsNotFound ユーザーが見つかりません

swagger:response getUsersUserIdTweetsNotFound
*/
type GetUsersUserIDTweetsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersUserIDTweetsNotFound creates GetUsersUserIDTweetsNotFound with default headers values
func NewGetUsersUserIDTweetsNotFound() *GetUsersUserIDTweetsNotFound {

	return &GetUsersUserIDTweetsNotFound{}
}

// WithPayload adds the payload to the get users user Id tweets not found response
func (o *GetUsersUserIDTweetsNotFound) WithPayload(payload *models.Error) *GetUsersUserIDTweetsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users user Id tweets not found response
func (o *GetUsersUserIDTweetsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUserIDTweetsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
